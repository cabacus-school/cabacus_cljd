(ns acme.audio
  (:require ["package:audioplayers/audioplayers.dart" :as ap]
            ["dart:async" :as async]))

(def ^:private num-tracks 17)

(def audioplayers
  (doto (mapv #(doto (ap/AudioPlayer)
                 (.setPlayerMode ap/PlayerMode.lowLatency)
                 (.setReleaseMode ap/ReleaseMode.stop)
                 (.setVolume 0.5)
                 (.setSource (ap/AssetSource (str "sound/bead-" % ".wav"))))
              (shuffle (range num-tracks)))
    (as-> $ (async/Future.wait (for [ap $] (.stop ^ap/AudioPlayer ap))))))

(def ^:private !audioplayers (atom (cycle audioplayers)))

(def ^:private bead-sound-stream-controller
  (#/(async/StreamController dart:core/Duration)))

(defn play-bead-ap []
  (let [[[ap]] (swap-vals! !audioplayers rest)]
    (.then (.stop ^ap/AudioPlayer ap)
           (fn [_] (.resume ^ap/AudioPlayer ap)))))

(declare bead-sound-stream-subscription)
(def bead-sound-stream-subscription
  (-> ^async/StreamController bead-sound-stream-controller
      .-stream
      (.listen
       (fn [bead-sound-interval]
         (play-bead-ap)
         (.pause ^async/StreamSubscription bead-sound-stream-subscription
                 (async/Future.delayed bead-sound-interval))))))

(defn play-bead-sound [bead-sound-interval]
  (.add ^async/StreamController bead-sound-stream-controller
        bead-sound-interval))
